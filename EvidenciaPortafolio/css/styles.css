/* --- Variables y Estilos Globales --- */

/* :root te permite crear variables de CSS que puedes usar en todo el documento. 
   Es útil para mantener consistencia en colores, fuentes, etc., y facilita los cambios. */
:root {
    --primary-color: #121212;   /* Variable para el color de fondo principal (un negro oscuro). */
    --secondary-color: #1DB954; /* Variable para el color de acento (un verde vibrante). */
    --text-color: #FFFFFF;      /* Variable para el color del texto principal (blanco). */
    --grey-color: #B3B3B3;      /* Variable para colores de texto secundario o bordes (gris claro). */
    --font-main: 'Helvetica', 'Arial', sans-serif; /* Variable para la fuente principal del sitio. */
}

/* El selector universal (*) aplica estos estilos a TODOS los elementos de la página.
   Se usa para un "reseteo" básico y para establecer un modelo de caja consistente. */
* {
    box-sizing: border-box; /* Cambia el cálculo del tamaño de las cajas. Ahora, el padding y el border se incluyen en el ancho y alto total, lo que facilita el diseño. */
    margin: 0;              /* Elimina todos los márgenes que los navegadores ponen por defecto. */
    padding: 0;             /* Elimina todos los paddings (rellenos) que los navegadores ponen por defecto. */
}

/* Estilos aplicados a la etiqueta <body>, que es el contenedor de todo el contenido visible. */
body {
    font-family: var(--font-main);        /* Usa la fuente que definimos en nuestras variables. */
    background-color: var(--primary-color); /* Usa el color de fondo que definimos. */
    color: var(--text-color);             /* Establece el color de texto por defecto para toda la página. */
    line-height: 1.6;                     /* Aumenta el espacio entre líneas de texto para mejorar la legibilidad. */
}

/* Una clase 'helper' o de ayuda para centrar contenido y limitar su ancho máximo. */
.container {
    max-width: 1200px;  /* El contenido dentro de este contenedor no será más ancho de 1200px. */
    margin: auto;       /* Centra el contenedor horizontalmente en la página. */
    padding: 0 20px;    /* Añade un relleno de 20px a la izquierda y derecha para que el contenido no toque los bordes de la pantalla. */
    overflow: hidden;   /* Soluciona problemas de elementos flotantes que se "salen" del contenedor. */
}

/* --- Animación de Keyframes --- */

/* Define una animación llamada 'fadeIn'. Las animaciones se componen de pasos (keyframes). */
@keyframes fadeIn {
    from { /* Estado inicial de la animación */
        opacity: 0;                 /* Empieza completamente transparente. */
        transform: translateY(20px);/* Empieza 20px más abajo de su posición final. */
    }
    to { /* Estado final de la animación */
        opacity: 1;               /* Termina completamente opaco. */
        transform: translateY(0); /* Termina en su posición original. */
    }
}

/* --- Encabezado y Navegación --- */
header {
    background: rgba(0, 0, 0, 0.8); /* Fondo negro con 80% de opacidad (translúcido). */
    padding: 1rem 0;                /* Relleno arriba y abajo. */
    position: sticky;               /* Fija el header en la parte superior de la pantalla cuando haces scroll. */
    top: 0;                         /* Pega el header en la parte superior (necesario para 'sticky'). */
    z-index: 100;                   /* Asegura que el header esté por encima de otros elementos. */
    backdrop-filter: blur(10px);    /* Aplica un efecto de desenfoque a lo que está detrás del header (efecto "cristal esmerilado"). */
}

/* Estilos para el contenedor dentro del header, usando Flexbox para alinear los elementos. */
header .container {
    display: flex;                  /* Activa el layout Flexbox. */
    justify-content: space-between; /* Coloca el logo a la izquierda y la navegación a la derecha, con el máximo espacio entre ellos. */
    align-items: center;            /* Centra verticalmente el logo y la navegación. */
}

.logo {
    color: var(--secondary-color); /* Usa el color de acento para el logo. */
    font-weight: bold;             /* Pone el texto en negrita. */
    animation: fadeIn 1s ease-in-out; /* Aplica la animación 'fadeIn' que definimos, con una duración de 1 segundo. */
}

/* Estilos para la lista de navegación. */
nav ul {
    list-style: none; /* Quita los puntos (viñetas) de la lista. */
    display: flex;    /* Pone los elementos de la lista en una fila horizontal. */
}

/* Estilos para los enlaces (<a>) dentro de la navegación. */
nav ul li a {
    color: var(--text-color);   /* Color del texto de los enlaces. */
    text-decoration: none;      /* Quita el subrayado de los enlaces. */
    padding: 0.5rem 1rem;       /* Añade relleno para que el área clickeable sea más grande. */
    transition: color 0.3s ease, background-color 0.3s ease; /* Anima suavemente el cambio de color y fondo en 0.3 segundos. */
}

/* Estilos que se aplican cuando pasas el ratón por encima de un enlace (:hover) o cuando el enlace tiene la clase 'active'. */
nav ul li a:hover, nav ul li a.active {
    color: var(--secondary-color); /* Cambia el color del texto al color de acento. */
    background-color: rgba(255, 255, 255, 0.1); /* Añade un fondo blanco muy sutil y transparente. */
    border-radius: 5px;             /* Redondea las esquinas del fondo. */
}

/* --- Contenido Principal --- */
main {
    padding: 2rem 0; /* Añade relleno arriba y abajo del contenido principal para separarlo del header y footer. */
}

/* Estilos para la sección 'hero' (la sección principal de bienvenida). */
#hero {
    height: 80vh; /* La altura será el 80% de la altura de la ventana del navegador (viewport height). */
    /* Aplica una imagen de fondo con un degradado oscuro por encima para que el texto sea legible.
       'no-repeat' evita que la imagen se repita. 'center center/cover' la centra y la escala para que cubra todo el espacio. */
    background: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url('../img/hero-background.jpg') no-repeat center center/cover;
    display: flex;            /* Usa Flexbox... */
    justify-content: center;  /* ...para centrar el contenido horizontalmente. */
    align-items: center;      /* ...y verticalmente. */
    text-align: center;       /* Centra el texto dentro del contenedor. */
    padding: 0 5%;            /* Añade padding lateral para que el texto no llegue a los bordes en pantallas muy anchas. */
}

.hero-text h2 {
    font-size: 3rem;           /* Tamaño de fuente grande para el título principal. */
    margin-bottom: 1rem;       /* Espacio debajo del título. */
    animation: fadeIn 1.5s ease-out; /* Aplica la animación de entrada. */
}

.hero-text p {
    font-size: 1.2rem;         /* Tamaño de fuente para el párrafo. */
    animation: fadeIn 2s ease-out; /* Aplica la animación, pero un poco más tarde que el título. */
}

#bio {
    text-align: center; /* Centra el texto de la sección de biografía. */
    padding: 4rem 0;    /* Añade un espaciado vertical grande. */
}

.profile-pic {
    width: 150px;
    height: 150px;
    border-radius: 50%;      /* 1. Crea el círculo perfecto. */
    object-fit: cover;       /* 2. Rellena el círculo sin deformar la foto. */
    object-position: center; /* 3. Centra la parte visible de la imagen. */
    border: 3px solid var(--secondary-color);
}

/* Estilos para la galería de proyectos (Grid Layout). */
.grid-container {
    display: grid; /* Activa el layout de CSS Grid. */
    /* Crea columnas automáticas. Cada columna tendrá un mínimo de 300px. Si hay más espacio, se repartirá equitativamente (1fr). */
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;       /* Espacio de 2rem entre cada elemento de la cuadrícula. */
    margin-top: 2rem;/* Espacio arriba de la cuadrícula. */
}

/* Estilos para cada tarjeta de proyecto. */
.project-card {
    background: #181818; /* Color de fondo oscuro para la tarjeta. */
    border-radius: 8px;  /* Esquinas redondeadas. */
    overflow: hidden;    /* Asegura que la imagen (que es hija) no se salga de las esquinas redondeadas. */
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Anima suavemente la transformación y la sombra. */
}

/* Efecto al pasar el ratón por la tarjeta. */
.project-card:hover {
    transform: translateY(-10px); /* Mueve la tarjeta 10px hacia arriba. */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5); /* Añade una sombra para dar efecto de profundidad. */
}

/* Estilos para la imagen dentro de la tarjeta. */
.project-card img {
    width: 100%;       /* La imagen ocupa todo el ancho de la tarjeta. */
    height: 200px;     /* Altura fija para la imagen. */
    object-fit: cover; /* Escala la imagen para llenar el espacio sin deformarla (recorta lo que sobra). */
}

.card-content {
    padding: 1.5rem; /* Relleno interno para el contenido de texto de la tarjeta. */
}

/* Estilos para la sección de Habilidades (Flex Layout). */
#skills {
    margin-top: 4rem; /* Espacio superior. */
}

.skills-container {
    display: flex;                /* Usa Flexbox para colocar las listas de habilidades una al lado de la otra. */
    justify-content: space-around;/* Distribuye el espacio sobrante alrededor de los elementos. */
    gap: 2rem;                    /* Espacio entre las listas de habilidades. */
    margin-top: 2rem;             /* Espacio arriba del contenedor. */
}

#skills ul, #skills ol {
    list-style-position: inside; /* Coloca los puntos/números de la lista dentro del área de texto. */
    padding-left: 1rem;          /* Añade un pequeño relleno a la izquierda. */
}

/* Estilos para el Formulario de Contacto. */
#contact-form form {
    display: flex;            /* Usa Flexbox... */
    flex-direction: column;   /* ...para apilar los campos del formulario verticalmente. */
    max-width: 600px;         /* Limita el ancho del formulario para que no sea demasiado largo en pantallas grandes. */
    margin: 2rem auto;        /* Centra el formulario y le da espacio vertical. */
}

#contact-form label {
    margin-bottom: 0.5rem;   /* Espacio debajo de cada etiqueta (label). */
    color: var(--grey-color);/* Usa el color gris para las etiquetas. */
}

#contact-form input, 
#contact-form textarea, 
#contact-form select {
    width: 100%;                  /* Ocupan todo el ancho del formulario. */
    padding: 0.8rem;              /* Relleno interno para que sean más fáciles de usar. */
    margin-bottom: 1rem;          /* Espacio debajo de cada campo. */
    background: #282828;          /* Color de fondo oscuro para los campos. */
    border: 1px solid var(--grey-color); /* Borde sutil. */
    border-radius: 5px;           /* Esquinas redondeadas. */
    color: var(--text-color);     /* Color del texto que el usuario escribe. */
    font-size: 1rem;              /* Tamaño de la fuente dentro del campo. */
}

/* Estilos para el botón de envío. */
#contact-form button {
    padding: 1rem;                         /* Relleno grande para que el botón sea fácil de pulsar. */
    background-color: var(--secondary-color); /* Usa el color de acento para el fondo. */
    color: var(--text-color);              /* Color del texto del botón. */
    border: none;                          /* Sin borde. */
    border-radius: 5px;                    /* Esquinas redondeadas. */
    cursor: pointer;                       /* Cambia el cursor a una mano para indicar que es clickeable. */
    font-size: 1.1rem;                     /* Tamaño de fuente ligeramente más grande. */
    transition: background-color 0.3s ease;/* Anima suavemente el cambio de color de fondo. */
}

#contact-form button:hover {
    background-color: #1ed760; /* Un tono de verde ligeramente más brillante al pasar el ratón. */
}

/* --- Pie de página --- */
footer {
    text-align: center; /* Centra el texto del pie de página. */
    padding: 2rem 0;    /* Espaciado vertical. */
    margin-top: 2rem;   /* Espacio arriba del pie de página. */
    border-top: 1px solid #282828; /* Línea divisoria sutil arriba del footer. */
}

/* --- Diseño Responsivo (Media Queries) --- */

/* Estos estilos se aplicarán ÚNICAMENTE en pantallas con un ancho máximo de 768px (tablets y móviles). */
@media (max-width: 768px) {
    .logo {
        font-size: 1.5rem; /* Reduce el tamaño del logo en pantallas pequeñas. */
    }
    
    /* Cambia la dirección del header para que el logo y la navegación se apilen verticalmente. */
    header .container {
        flex-direction: column;
    }

    nav {
        margin-top: 1rem; /* Añade espacio entre el logo y la navegación. */
    }
    
    /* Reduce el tamaño del título principal en la sección 'hero'. */
    .hero-text h2 {
        font-size: 2rem;
    }

    /* Apila las listas de habilidades verticalmente en lugar de estar una al lado de la otra. */
    .skills-container {
        flex-direction: column;
    }
}